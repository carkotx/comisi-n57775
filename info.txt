CLASE 1----------------------------------------
Refrescar los atributos en html y JS  porque se van a (converti) a JSX
Metos de arrays : en general - .map , .filter , .find
Destructuring
Rest/Spread operator (...)
Arrow functons
Modulos

CLASE 2------------------------------------------

1) Instalacion de Node.JS
Node.js: entorno de ejecucion de Javascript
2)Verificar las versiones de node.dj y NPM(superior a 1.8.x y 8.x Rest)
Instalacion del entorno
3) Intalacion del entorno : vite.dj

webpack + Babel

need to install the following packages: 
create-vite@5.2.3

correr a ejecutar la app

Node.js: entorno de ejecucion de Javascript

pwd : nos da la ruta actual

>npm create vite@latest : crea un proyecto de vite, 
 es decir, nos crea una carpeta con archivos en el sistema 
 operativo
> cd nombreCarpeta : nos movemos a la carpeta creada
> npm install o npm i : instala las dependencias del proyecto
> npm run dev : corre el proyecto en modo desarrollo

CLASE 3 ------------------------------------------

JSX

JSX es una extension de la sintaxis de JavaScript que 
nos permite escribir HTML en JavaScript de manera mas
sencilla y legible y que luego es transformado a JavaScript
 puro mediante Babel.

CLASE 4 ------------------------------------------

Props : son los parametros que se le pasan a un componente. 
Por default son de solo lectura y no se pueden modificar y 
viene predefinido y por defecto va recibir un objeto. 
Estados de un componente : Queda pendiente y se ve la clase que viene
imagenes
css frameworks

- bootstrap : https://getbootstrap.com/  | https://react-bootstrap.github.io/
- tailwind (*) : https://tailwindcss.com/
https://tailwindcss.com/docs/guides/vite
- Material UI : https://mui.com/
- Ant Design : https://ant.design/
- Ant Design : https://ant.design/
- https://github.com/comisiones-coderhouse/comision_57775
- https://vercel.com/ ---te da una url y te lo trae a local
  para ver los componentes que voy creando:
- https://chromewebstore.google.com/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi

 AFTER 1 ------------------------------------------

Common Command Line Commands

cd : change directory - Cambia el directorio actual
ls : list - Muestra los archivos y carpetas en el directorio actual
pwd : print working directory - Muestra la ruta del directorio actual
touch : crea un archivo
mkdir : crea una carpeta
rm : remove - Elimina un archivo
rm -r : remove recursively - Elimina una carpeta
code . : abre Visual Studio Code en el directorio actual


git init : inicializa un repositorio de git - crea una carpeta llamada .git en el directorio actual

git status : muestra el estado de los archivos en el repositorio de git

git clone
git add
git commit
git push